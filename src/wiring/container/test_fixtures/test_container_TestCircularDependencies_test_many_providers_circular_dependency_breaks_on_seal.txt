Circular dependencies detected (3):
1:
    ModuleA.a -> ProviderA.provide_a(..., param1: ModuleB.b)
    ModuleB.b -> ProviderB.provide_b(..., param2: ModuleC.c)
    ModuleC.c -> ProviderC.provide_c(..., param3: ModuleA.a)

2:
    ModuleB.b -> ProviderB.provide_b(..., param2: ModuleC.c)
    ModuleC.c -> ProviderC.provide_c(..., param3: ModuleA.a)
    ModuleA.a -> ProviderA.provide_a(..., param1: ModuleB.b)

3:
    ModuleC.c -> ProviderC.provide_c(..., param3: ModuleA.a)
    ModuleA.a -> ProviderA.provide_a(..., param1: ModuleB.b)
    ModuleB.b -> ProviderB.provide_b(..., param2: ModuleC.c)


Providers involved:
    - ProviderC: "src/wiring/container/test_container.py"
    - ProviderB: "src/wiring/container/test_container.py"
    - ProviderA: "src/wiring/container/test_container.py"
